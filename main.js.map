{"version":3,"sources":["./src/app/transclusion/trans-child/trans-child.component.ts","./src/environments/environment.ts","./src/app/template-consuming/template-consuming.component.html","./src/app/template-consuming/template-consuming.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/models/templateContainer.ts","./src/app/template-defining/template-defining.component.ts","./src/app/template-defining/template-defining.component.html","./src/app/transclusion/trans-parent/trans-parent.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-trans-child',\n  template: `\n    <div>\n      <ng-content></ng-content>\n    </div>\n    <button (click)=\"setModel()\">Set Model By Child</button>\n  `,\n  styleUrls: ['./trans-child.component.less']\n})\nexport class TransChildComponent {\n\n  @Input() model: string;\n\n  setModel(): void {\n    this.model = 'SetByChild';\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<ng-container *ngTemplateOutlet=\"specificTemplate\"></ng-container>\r\n\r\n<ng-container *ngFor=\"let templateReference of templateContainer.multipleTemplates\">\r\n  <ng-template *ngTemplateOutlet=\"templateReference\"></ng-template>\r\n</ng-container>","import { AfterViewInit, TemplateRef } from '@angular/core';\nimport { Component, Input } from '@angular/core';\nimport { TemplateContainer } from '../models/templateContainer';\n\n@Component({\n  selector: 'template-consuming',\n  templateUrl: './template-consuming.component.html',\n  styleUrls: ['./template-consuming.component.less']\n})\nexport class TemplateConsumingComponent implements AfterViewInit {\n\n  @Input()\n  templateContainer: TemplateContainer;\n\n  @Input('blue-template')\n  specificTemplate: TemplateRef<never>;\n\n  constructor() {\n\n    console.log('TemplateConsumingComponent ctor');\n  }\n\n  ngAfterViewInit(): void {\n\n    console.log('TemplateConsumingComponent::ngAfterViewInit');\n\n    console.log(this.specificTemplate);\n    console.log(this.templateContainer);\n  }\n}\n\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n  title = 'passing-templates-between-components';\n}\n","<template-defining></template-defining>\r\n\r\n<app-trans-parent></app-trans-parent>\r\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { TemplateDefiningComponent } from './template-defining/template-defining.component';\nimport { TemplateConsumingComponent } from './template-consuming/template-consuming.component';\nimport { TransParentComponent } from './transclusion/trans-parent/trans-parent.component';\nimport { TransChildComponent } from './transclusion/trans-child/trans-child.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TemplateDefiningComponent,\n    TemplateConsumingComponent,\n    TransParentComponent,\n    TransChildComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { TemplateRef } from '@angular/core';\r\n\r\nexport class TemplateContainer {\r\n\r\n  public multipleTemplates: TemplateRef<any>[];\r\n\r\n  public singleTemplate: TemplateRef<any>;\r\n}\r\n","import { Container } from '@angular/compiler/src/i18n/i18n_ast';\nimport {\n  AfterViewInit,\n  Component,\n  OnDestroy,\n  OnInit,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewChildren\n} from '@angular/core';\nimport { TemplateContainer } from '../models/templateContainer';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'template-defining',\n  templateUrl: './template-defining.component.html',\n  styleUrls: ['./template-defining.component.less']\n})\nexport class TemplateDefiningComponent implements AfterViewInit {\n\n  @ViewChild('blueTemplate')\n  private blueTemplate: TemplateRef<never>;\n\n  @ViewChildren(TemplateRef)\n  private definedTemplates: QueryList<TemplateRef<never>>;\n\n  public templateContainer: TemplateContainer;\n\n  constructor() {\n    console.log('TemplateDefiningComponent ctor');\n    this.templateContainer = new TemplateContainer();\n  }\n\n  ngAfterViewInit(): void {\n    console.log('TemplateDefiningComponent::ngAfterViewInit');\n\n    console.log(this.definedTemplates.toArray());\n    console.log(this.blueTemplate);\n\n    this.templateContainer = {\n      multipleTemplates: this.definedTemplates.toArray(),\n      singleTemplate: this.blueTemplate\n    };\n  }\n}\n","<ng-template #blueTemplate>\n  <div style=\"background-color: cornflowerblue;\">\n    <p>Blue template</p>\n  </div>\n</ng-template>\n\n<ng-template #greenTemplate>\n  <div style=\"background-color: green;\">\n    <p>Green template</p>\n  </div>\n</ng-template>\n\n<ng-template #yellowTemplate>\n  <div style=\"background-color: yellow;\">\n    <p>Yellow template</p>\n  </div>\n</ng-template>\n\n<ng-template #greenTemplate>\n  <div style=\"background-color: orange;\">\n    <p>Orange template</p>\n  </div>\n</ng-template>\n\n<ng-template #greenTemplate>\n  <div style=\"background-color: red;\">\n    <p>Violet template</p>\n  </div>\n</ng-template>\n\n<template-consuming \n  [templateContainer]=\"templateContainer\"\n  [blue-template]=\"blueTemplate\">\n</template-consuming>\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-trans-parent',\n  template: `\n    <app-trans-child [model]=\"model\">\n        <p>This model is {{model}}</p>\n    </app-trans-child>\n  `,\n  styleUrls: ['./trans-parent.component.less']\n})\nexport class TransParentComponent {\n\n  public model = 'SetByParent';\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}